Index: django/contrib/admin/options.py
===================================================================
--- django/contrib/admin/options.py	(revision 13975)
+++ django/contrib/admin/options.py	(working copy)
@@ -445,11 +445,11 @@
             change_message  = message
         )
 
-    def log_deletion(self, request, object, object_repr):
+    def log_deletion(self, request, object_pk, object_repr):
         """
         Log that an object has been successfully deleted. Note that since the
         object is deleted, it might no longer be safe to call *any* methods
-        on the object, hence this method getting object_repr.
+        on the object, hence this method getting object_repr and object_pk.
 
         The default implementation creates an admin LogEntry object.
         """
@@ -457,7 +457,7 @@
         LogEntry.objects.log_action(
             user_id         = request.user.id,
             content_type_id = ContentType.objects.get_for_model(self.model).pk,
-            object_id       = object.pk,
+            object_id       = object_pk,
             object_repr     = object_repr,
             action_flag     = DELETION
         )
@@ -1112,8 +1116,9 @@
             if perms_needed:
                 raise PermissionDenied
             obj_display = force_unicode(obj)
-            self.log_deletion(request, obj, obj_display)
+            obj_pk = obj.pk
             obj.delete()
+            self.log_deletion(request, obj_pk, obj_display)
 
             self.message_user(request, _('The %(name)s "%(obj)s" was deleted successfully.') % {'name': force_unicode(opts.verbose_name), 'obj': force_unicode(obj_display)})
